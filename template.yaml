AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  FixityEventRule

  SAM Template for Execute Fixity Steps Function

Parameters:
    Region:
      Type: String
      Default: "us-east-1"
    DatabaseName:
      Type: String
      Default: "DatabaseName"
    TableName:
      Type: String
      Default: "TableName"
    FixityOutputBucket:
      Type: String
      Default: "FixityOutputBucket"
    ResultBucket:
      Type: String
      Default: "ResultBucket"
    WorkGroupName:
      Type: String
      Default: "primary"
    StateMachineName:
      Type: String
      Default: "StateMachineName"
    DayPeriod:
      Type: Number
      Default: 90
    SNSTopic:
      Type: String
      Default: "FixityResultTopic"
    Email:
      Type: String
      Default: "test@vt.edu"

Resources:
  GlueManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: GlueManagedPolicyForFixity
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action: "glue:GetTable"
            Resource:
              - "arn:aws:glue:*:*:database/*"
              - "arn:aws:glue:*:*:catalog"
              - "arn:aws:glue:*:*:table/*"

  FixityResultTopic:
    Type: "AWS::SNS::Topic"
    Properties:
      DisplayName: "Fixity result SNS topic"
      Subscription:
        -
          Endpoint: !Ref Email
          Protocol: email
      TopicName: !Ref SNSTopic

  ExecuteFixityStepsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: fixitycheck/
      Handler: lambda_function.lambda_handler
      Runtime: python3.8
      MemorySize: 2048
      Timeout: 120
      Policies:
        - AthenaQueryPolicy:
            WorkGroupName: !Ref WorkGroupName
        - S3WritePolicy:
            BucketName: !Ref ResultBucket
        - S3ReadPolicy:
            BucketName: !Ref ResultBucket
        - S3ReadPolicy:
            BucketName: !Ref FixityOutputBucket
        - StepFunctionsExecutionPolicy:
            StateMachineName: !Ref StateMachineName
        - !Ref GlueManagedPolicy
      Events:
        ScheduledEvent:
          Type: Schedule
          Properties:
            Schedule: rate(1 day)

      Environment:
          Variables:
            Region: !Ref Region
            DatabaseName: !Ref DatabaseName
            TableName: !Ref TableName
            FixityOutputBucket: !Ref FixityOutputBucket
            ResultBucket: !Ref ResultBucket
            StateMachineArn: !Sub "arn:aws:states:${Region}:${AWS::AccountId}:stateMachine:${StateMachineName}"
            DayPeriod: !Ref DayPeriod

  FixitySNS:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: fixitycheck/
      Handler: sns.lambda_handler
      Runtime: python3.8
      MemorySize: 2048
      Timeout: 120
      Policies:
        - SNSPublishMessagePolicy:
            TopicName: !Ref SNSTopic
        - AthenaQueryPolicy:
            WorkGroupName: !Ref WorkGroupName
        - S3WritePolicy:
            BucketName: !Ref ResultBucket
        - S3ReadPolicy:
            BucketName: !Ref ResultBucket
        - S3ReadPolicy:
            BucketName: !Ref FixityOutputBucket
        - !Ref GlueManagedPolicy

      Environment:
          Variables:
            FixitySNS: !Ref FixityResultTopic
            DatabaseName: !Ref DatabaseName
            TableName: !Ref TableName
            ResultBucket: !Ref ResultBucket

Outputs:
  ExecuteFixityStepsFunction:
    Description: "Execute Fixity Steps Function ARN"
    Value: !GetAtt ExecuteFixityStepsFunction.Arn
  ExecuteFixityStepsFunctionIamRole:
    Description: "Implicit IAM Role created for Execute Fixity Steps Function"
    Value: !GetAtt ExecuteFixityStepsFunctionRole.Arn
  FixityResultTopic:
    Description: "Fixity result SNS topic ARN"
    Value: !Ref FixityResultTopic
  FixitySNS:
    Description: "FixitySNS ARN"
    Value: !GetAtt FixitySNS.Arn
  FixitySNSIamRole:
    Description: "Implicit IAM Role created for FixitySNS function"
    Value: !GetAtt FixitySNSRole.Arn
